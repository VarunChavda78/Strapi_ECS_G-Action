name: Deploy Strapi to ECS

on:
  push:
    branches:
      - main  # or varun

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: strapi-varun-ecr-repo
  ECS_CLUSTER: strapi-varun-cluster
  ECS_SERVICE: strapi-varun-service
  ECS_TASK_DEFINITION: postgres17
  CONTAINER_NAME: strapi-varun-container

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::607700977843:role/ecs-varun-execution-role
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker image to ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Download existing task definition
      run: |
        aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION > task-def.json

    - name: Update image in task definition
      run: |
        sudo apt-get update && sudo apt-get install -y jq
        jq --arg IMAGE "$IMAGE_URI" \
          '.taskDefinition.containerDefinitions[0].image = $IMAGE' \
          task-def.json > new-task-def.json

    - name: Register new task definition
      id: task-def
      run: |
        NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json \
          --query 'taskDefinition.taskDefinitionArn' --output text)
        echo "task_def_arn=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Update ECS service to use new task definition
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --task-definition ${{ env.task_def_arn }}
